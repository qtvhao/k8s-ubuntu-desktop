#!/bin/bash

set -xeo pipefail
rm /run/dbus/pid || true
export DBUS_SESSION_BUS_ADDRESS=`dbus-daemon --config-file=/usr/share/dbus-1/session.conf --fork --print-address`
export DBUS_SYSTEM_BUS_ADDRESS=`dbus-daemon --config-file=/usr/share/dbus-1/system.conf --fork --print-address`

if [ -z "$DBUS_SESSION_BUS_ADDRESS" ]; then
    echo "Failed to get DBUS_SESSION_BUS_ADDRESS"
    sleep 30
    exit 1
fi
if [ -z "$DBUS_SYSTEM_BUS_ADDRESS" ]; then
    echo "Failed to get DBUS_SYSTEM_BUS_ADDRESS"
    sleep 30
    exit 1
fi

mkdir -p /data-backup/profile
_term() {
    echo "Caught SIGTERM signal! It means that the container is being stopped. Saving the profile"
    cp -r /data/* /data-backup/profile || true
    kill -TERM "$child"
}

trap _term SIGTERM

echo "Doing some initial work...";
for i in $(seq 1 10); do
    if [ -f "/data-backup/profile/BrowserMetrics/" ]; then
        echo "File $i exists"
        break;
    else
        echo "File $i does not exist"
    fi
    sleep 1
    echo "Waiting for file $i"
done
mkdir -p /data
cp -r /data-backup/profile/* /data/ || true
chmod -R 0777 /data

if [ -z "$REMOTE_DEBUGGING_PORT" ]; then
    REMOTE_DEBUGGING_PORT=21222
fi
google-chrome-stable \
    --start-maximized \
    --user-data-dir=/data \
    --remote-debugging-port=$REMOTE_DEBUGGING_PORT \
    --disable-gpu \
    --disable-dev-shm-usage \
    --disable-software-rasterizer \
    --disable-proxy-certificate-handler \
    --no-sandbox \
    --no-first-run \
    --no-zygote http://example.com & child=$!
wait "$child"
