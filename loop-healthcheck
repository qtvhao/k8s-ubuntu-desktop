#!/bin/bash

set -xeo pipefail
rm /run/dbus/pid || true
export DBUS_SESSION_BUS_ADDRESS=`dbus-daemon --config-file=/usr/share/dbus-1/session.conf --fork --print-address`
export DBUS_SYSTEM_BUS_ADDRESS=`dbus-daemon --config-file=/usr/share/dbus-1/system.conf --fork --print-address`

if [ -z "$DBUS_SESSION_BUS_ADDRESS" ]; then
    echo "Failed to get DBUS_SESSION_BUS_ADDRESS"
    sleep 30
    exit 1
fi
if [ -z "$DBUS_SYSTEM_BUS_ADDRESS" ]; then
    echo "Failed to get DBUS_SYSTEM_BUS_ADDRESS"
    sleep 30
    exit 1
fi

mkdir -p /data-backup/profile
_term() {
    echo "Caught SIGTERM signal! It means that the container is being stopped. Saving the profile"
    cp -r /data /data-backup/profile
    kill -TERM "$child"
}

trap _term SIGTERM

echo "Doing some initial work...";
wait_for_file_available() {
    local file="$1"
    while [ ! -f "$file" ]; do
        sleep 1
    done
}
# wait_for_file_available /bitnami/redis/data/backup-service/dump.rdb || true

google-chrome-stable \
    --start-maximized \
    --user-data-dir=/data \
    --remote-debugging-port=21222 \
    --disable-gpu \
    --disable-dev-shm-usage \
    --disable-software-rasterizer \
    --disable-proxy-certificate-handler \
    --no-sandbox \
    --no-first-run \
    --no-zygote http://example.com & child=$!
wait "$child"
